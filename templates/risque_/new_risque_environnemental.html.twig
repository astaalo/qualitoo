{% extends 'configuration/index.html.twig' %}

{% block menu_config %}
{% endblock %}

{% block header_config %}
<div class="header">
	<span>
		<span class="ico color add"></span>Identification de risque environnemental
	</span>
	<div id="buttom_top">
		<ul class="uibutton-group">
			<li><a class="uibutton icon answer" href="{{ path('les_risques') }}">Liste des risques</a></li>
        </ul>
    </div>
</div>
{% endblock %}

{% block content_config %}
	<div class="contentForm">
		<form  novalidate="novalidate"  action="{{ entity.id is empty ? path('ajout_risque', {'cartographie_id': cartographie_id}) : path('edition_risque', {'id': id}) }}" method="POST">
			
			{% set menaceCodeAfter %}
				<label class="other_label"><input class="other" target-id="{{ form.risque.identification.libelle.vars.id }}" type="checkbox" />Saisir le nom du risque</label>
				{{ form_widget(form.risque.identification.libelle, {'show': false}) }}
			{% endset %}
			{% set responsableCodeBefore %}
				Responsable du site choisi : {{ form_widget(form.proprietaire) }}
				<br><br>
			{% endset %}
			{% set causeSheepItTemplate %}
				{% include 'extra/sheepIt_template.html.twig' with
					{
						'id': form.risque.causeOfRisque.vars.id,
						'prototype' : form.risque.causeOfRisque.vars.prototype, 
						'prototypeTemplate' : 'OrangeMainBundle:Risque:risque_aspect_prototype.html.twig',
						'addText': 'Ajouter un aspect', 
						'removeAllText': 'Supprimer toutes les aspects',
						'noFormText': 'Aucun aspect n\'est encore identifi� !',
					}
				%}
			{% endset %}
			
			{% set causeDataForm, impactDataForm = '', '' %}
			{% for causeForm in form.risque.causeOfRisque %}
				{% set row %}
				{
				       {% if causeForm.vars.value.cause is empty %}
				       	{{ '"%s": ""'|format(causeForm.cause.vars.name )|raw}},
				       {% elseif causeForm.vars.value.cause.etat==true %}
							{{ '"%s": "%s"'|format(causeForm.cause.vars.name, causeForm.cause.vars.value)|raw }},
						{% else %}
							{{ '"%s": "%s"'|format(causeForm.newCause.libelle.vars.name, causeForm.newCause.libelle.vars.value)|raw }},
						{% endif %}
						{% set modeFonctionnementId = (causeForm.modeFonctionnement.vars.value ? causeForm.modeFonctionnement.vars.value : '') %}
						{{ '"%s": "%s"'|format(causeForm.modeFonctionnement.vars.name, modeFonctionnementId)|raw }}
				},
				{% endset %}
				{% set causeDataForm = causeDataForm ~ row %}
			{% endfor %}
			{% set causeDataForm, impactDataForm = '[%s]'|format(causeDataForm|raw), '[%s]'|format(impactDataForm|raw) %}
				 	{{ form_row(form.site) }}
				 	{{ form_row(form.risque.identification.responsable, {'code_before' : responsableCodeBefore, 'show': false}) }}
					{{ form_row(form.domaineActivite) }}
					{{ form_row(form.equipement) }}
					{{ form_row(form.lieu) }}
					{{ form_row(form.manifestation) }}
					{{ form_row(form.proprietaire) }}
					{{ form_row(form.risque.menace, {'code_after' : menaceCodeAfter }) }}
			  		{{ form_row(form.risque.causeOfRisque, {'label': 'Aspects' ,'sheeptIt_template' : causeSheepItTemplate }) }}
					{{ form_row(form._token) }}
			<!-- /Form content -->
			<div class="section last footer">
				<div>
					<button id="save" class="uibutton loading" >Enregistrer</button>
					<a class="uibutton special" onClick="ResetForm()" title="Effacer">Effacer</a>
				</div>
			</div>
		</form>
	</div>

{% block add_script_js %}
	<script type="text/javascript">
		$( "#accordion" ).accordion({
			heightStyle: "fill",
			icons: { "header": "ui-icon-plus", "activeHeader": "ui-icon-minus" },
			beforeActivate: function( event, ui ) {
				/*if($(ui.newHeader.context).hasClass('last')) {
					$('#save').removeClass('disable').prop('disabled', false);
				} else {
					$('#save').addClass('disable').prop('disabled', true);
				}*/
			}
		});
		
		// code to execute after Select ajax load
		function afterProfilRisqueReload() {
			$("#{{ form.risque.menace.vars.id }} option[value='{{ form.risque.menace.vars.value }}']").attr('selected', 'selected');
			$("#{{ form.risque.menace.vars.id }}").trigger('liszt:updated');
		}

		$('label input[type="checkbox"].other').each(function(index) {
			var target = $('#' + $(this).attr('target-id'));
			$(this).prop('checked', target.val().length !== 0 ? 'checked' : null);
			if(target.val().length !== 0) {
				target.parent().show();
			}
		});
		
		$('label input[type="checkbox"].other').on('change', function(e) {
			var target = $('#' + $(this).attr('target-id'));
			toggle(target.closest('div'), this.checked);
			if(!this.checked) {
				target.val('')
			}
		});

	</script>
	<script type="text/javascript">
$(function() {
$nouvelle_causeLib=$( ".risque_cause_row .section:eq(2)" );
$nouvelle_causeLib.hide();
	$('input[type="checkbox"]').live('change', function(e) {
		$newCauz  = $(this).parent().parent().parent().children('.section:eq(2)');
		if($(this).prop( "checked" )) {
			$newCauz.show(  );
		} else {
			$newCauz.hide(  );
		}
		
			
	});
});
</script>
{% endblock %}

{% set codeAfterResponsableUpdate %}
		var show = false;
		if(result == 'Aucun') {
			show = true;
		}
		var obj = $('#{{ form.risque.identification.responsable.vars.id }}').closest('div');
		toggle(obj, show);
{% endset %}

{% include 'extra/sheepit.html.twig' with {
				with_script: true,
				content: '#' ~ form.risque.causeOfRisque.vars.id, 
				options: '{' ~
					'iniFormsCount: 1, 
					minFormsCount: 0,  
					maxFormsCount: 100,
					indexFormat: "__name__", 
					data: ' ~ causeDataForm ~ ', 
					separator: "", allowRemoveAll: true, ' ~ 
					'afterAdd: function(source, addForm ,causeDataForm) {    },' ~
					'afterFill: function(source, addForm, value) { refreshChosen($(addForm).find(".cl_cause"), value.cause); }, ' ~
					'removeAllConfirmationMsg: "Vous êtes sur le point de supprimer toutes les causes liées à ce risque. Voulez vous vraiment continuer ?", ' ~
					'afterRemoveCurrent: function(source) {  } ' ~
					'}', 
				embeddedForm: form.risque.causeOfRisque, 
				error_fields: {0 :'cause', 'newCause': { 0:'libelle' }} 
			}
 %}
{% include 'extra/updateField.html.twig' with 
	{parent: form.site, fieldId: 'responsable', url: path('get_responsable_by_site'), key: 'id', empty_child: 0, codeAfter: codeAfterResponsableUpdate} 
%}
{% endblock %}
